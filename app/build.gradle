/*
 Copyright (c) 2010 - 2022 Marvin Horter.
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the GNU Public License v2.0
 which accompanies this distribution, and is available at
 http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

import com.mikepenz.aboutlibraries.plugin.DuplicateMode

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.mikepenz.aboutlibraries.plugin' // has to be applied AFTER android
    id 'org.owasp.dependencycheck'
}

aboutLibraries {
    duplicationMode = DuplicateMode.MERGE
    includePlatform = false
    prettyPrint = true
}

android {
    namespace 'com.marv42.ebt.newnote'

    defaultConfig {
        applicationId 'com.marv42.ebt.newnote'
        versionCode 7500
        versionName "0.75.0"
        minSdkVersion libs.versions.minSdk.get().toInteger()
        compileSdk libs.versions.compileSdk.get().toInteger()
        targetSdkVersion libs.versions.targetSdk.get().toInteger()
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro", "proguard-rules-acra.pro"
        }
        debug {
            debuggable true
            minifyEnabled false
        }
    }

    flavorDimensions = ['ocrServiceKey']
    productFlavors {
        withKey {
            dimension 'ocrServiceKey'
            versionNameSuffix '-withKey'
        }
        withoutKey {
            dimension 'ocrServiceKey'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        viewBinding true
    }

    configurations.configureEach {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.2"
    }

    lint {
        disable 'MissingTranslation'
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.compilerArgs += ["-Xlint:deprecation"]
                options.compilerArgs += ["-Xlint:unchecked"]
            }
        }
    }
}

dependencies {
    implementation libs.kotlinx.coroutines.core
    implementation libs.acra.mail
    implementation libs.acra.toast
    implementation libs.appcompat
    implementation libs.cardview
    implementation libs.exifinterface
    implementation libs.fragment.ktx
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation libs.preference.ktx
    implementation libs.recyclerview
    implementation libs.security.crypto
    implementation libs.design
    implementation libs.material
    implementation libs.gson
//    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation libs.dagger.android.support
    annotationProcessor "com.google.dagger:dagger-compiler:${libs.versions.daggerVersion.get()}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${libs.versions.daggerVersion.get()}"
    implementation libs.okhttp
    implementation libs.picasso
    implementation libs.aboutlibraries
//    TODO implementation "com.mikepenz:aboutlibraries-core:${rootProject.ext.aboutLibrariesVersion}"
//    implementation "com.mikepenz:aboutlibraries-compose:${rootProject.ext.aboutLibrariesVersion}"
    implementation libs.tesseract4android.openmp

//    androidTestImplementation "androidx.test.ext:junit:1.1.2"
//    androidTestImplementation "androidx.test.ext:junit:1.1.3"
//    androidTestImplementation "androidx.test:core:1.4.0"
//    androidTestImplementation "androidx.test:runner:1.4.0"
//    androidTestImplementation "androidx.test:rules:1.4.0"
//    androidTestImplementation "androidx.test.ext:truth:1.4.0"
//    androidTestImplementation "com.google.truth:truth:1.0.1"
//    androidTestImplementation "org.testng:testng:6.9.6"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
}
